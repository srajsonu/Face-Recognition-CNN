import osimport cv2import numpy as npfrom PIL import Imageimport picklebase_dir = os.path.dirname(os.path.abspath(__file__))image_dir = os.path.join(base_dir, "images")face_cascade = cv2.CascadeClassifier('data/haarcascade_frontalface_alt2.xml')recognizer = cv2.face.LBPHFaceRecognizer_create()x_train = []y_labels = []current_id = 0label_ids = {}for root, dirs, files in os.walk(image_dir):    for file in files:        if file.endswith("png") or file.endswith("jpeg"):            path = os.path.join(root, file)            #label = os.path.basename(os.path.dirname(path)).replace(" ", "-").lower()            label = os.path.basename(root).replace(" ", "-").lower()            #print(label)            if not label in label_ids:                label_ids[label] = current_id                current_id += 1            id_ = label_ids[label]            print(label_ids)            # x_train.append(path)            # y_labels.append(label)            pil_image = Image.open(path).convert("L")            image_array = np.array(pil_image, "uint8")            faces = face_cascade.detectMultiScale(image_array, scaleFactor = 1.5, minNeighbors = 5)            #print(image_array)            for (x,y,w,h) in faces:                roi = image_array[y:y+h, x:x+w]                x_train.append(roi)                y_labels.append(id_)with open("labels.pickle", "wb") as f:    pickle.dump(label_ids,f)recognizer.train(x_train,np.array(y_labels))recognizer.save("trainer.yml")