import numpy as npimport matplotlib.pyplot as pltimport osimport cv2data_dir='/Users/aryn/Downloads/test_set'categories=['cats','dogs']img_size=50training_data = []def training():    for i in categories:        path=os.path.join(data_dir,i)        class_num=categories.index(i)        for img in os.listdir(path):            try:                img_array=cv2.imread(os.path.join(path,img),cv2.IMREAD_GRAYSCALE)                new_array=cv2.resize(img_array,(img_size,img_size))                training_data.append([new_array,class_num])            except Exception:                pass                #print(e)training()print(len(training_data))import randomrandom.shuffle(training_data)X=[]y=[]for features,labels in training_data:    X.append(features)    y.append(labels)X=np.array(X).reshape(-1,img_size,img_size,1)y=np.array(y)import picklepickle_out=open('X.pickle','wb')pickle.dump(X,pickle_out)pickle_out.close()pickle_out=open('y.pickle','wb')pickle.dump(y,pickle_out)pickle_out.close()import tensorflow as tffrom tensorflow.keras.models import Sequentialfrom tensorflow.keras.layers import Dense, Dropout, Activation, Flatten, Conv2D, MaxPooling2DX=pickle.load(open('X.pickle','rb'))y=pickle.load(open('y.pickle','rb'))X=X/255.0model=Sequential()model.add(Conv2D(64,(3,3),input_shape=X.shape[1:]))model.add(Activation('relu'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Conv2D(64,(3,3)))model.add(Activation('relu'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Flatten())model.add(Dense(64))model.add(Dense(1))model.add(Activation('softmax'))model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])model.fit(X,y,batch_size=32,epochs=5,validation_split=0.7)